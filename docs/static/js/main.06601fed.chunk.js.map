{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","console","log","cats","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setstate","useEffect","then","imgs","useFetchGifs","GifExpertApp","categories","divRoot","document","querySelector","ReactDOM","render"],"mappings":"mMAGaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAEzB,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAoBA,OAEI,sBAAMC,SAfW,SAACC,GAClBA,EAAEC,iBAECJ,EAAWK,OAAOC,OAAO,IACxBC,QAAQC,IAAI,gBACZV,GAAe,SAAAW,GAAI,OAAKT,GAAL,mBAAmBS,OACtCR,EAAc,MASlB,SACI,uBACIS,KAAK,OACLC,MAAQX,EACRY,SAxBc,SAACT,GAEvBF,EAAeE,EAAEU,OAAOF,a,+BCHfG,EAAO,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,6DAEbC,EAFa,iDAEmCC,UAAUH,GAF7C,+DAGAI,MAAQF,GAHR,cAGbG,EAHa,gBAIEA,EAAKC,OAJP,uBAIZC,EAJY,EAIZA,KAEDC,EAAOD,EAAKE,KAAI,SAAAC,GAAO,IAAD,EACxB,MAAM,CACFC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAVvB,kBAcZM,GAdY,4CAAH,sDCJXO,EAAc,SAAC,GAAuB,EAArBJ,GAAsB,IAAlBC,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IAIrC,OACI,sBAAKc,UAAU,uCAAf,UACI,qBAAKC,IAAOf,EAAMgB,IAAKN,IACvB,kCAAMA,SCJLO,EAAU,SAAC,GAAkB,IAAhBnB,EAAe,EAAfA,SAKtB,ECLwB,SAAEA,GAE1B,MAA0BhB,mBAAS,CAE/BuB,KAAM,GACNa,SAAS,IAHb,mBAAOC,EAAP,KAAcC,EAAd,KAsBA,OAfAC,qBAAW,WAEPxB,EAASC,GAEJwB,MAAM,SAAAC,GAEHH,EAAS,CACLf,KAAMkB,EACNL,SAAS,SAKvB,CAACpB,IAEIqB,EDnB0BK,CAAa1B,GAAjCa,EAAb,EAAQN,KAAaa,EAArB,EAAqBA,QAMrB,OACI,qCACI,mCAAOpB,EAAP,OAEEoB,GAAW,2CAEb,qBAAKJ,UAAU,4CAAf,SAIQH,EAAOJ,KAAK,SAACC,GACT,OAAO,cAAC,EAAD,eAECA,GADGA,EAAIC,aEYxBgB,EAjCM,WAGjB,MAAoC3C,mBAAS,CAAC,cAA9C,mBAAO4C,EAAP,KAAmB7C,EAAnB,KAMA,OACI,qCACI,8CACA,cAAC,EAAD,CAAaA,cAAgBA,IAC7B,uBAIA,6BAEQ6C,EAAWnB,KAAK,SAAAT,GAAQ,OAEpB,cAAC,EAAD,CAEIA,SAAYA,GADPA,YCrB3B6B,G,MAAUC,SAASC,cAAc,UAEvCC,IAASC,OAAQ,cAAC,EAAD,IAAkBJ,K","file":"static/js/main.06601fed.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory = ({setCategories}) => {\r\n    \r\n    const [inputValue, setInputValue] = useState('');\r\n\r\n    const handleInputChange = (e) =>{\r\n        \r\n        setInputValue (e.target.value)\r\n    }\r\n\r\n    const handleSubmit = (e)=>{\r\n        e.preventDefault();\r\n\r\n        if(inputValue.trim().length>2){\r\n            console.log('Submit Fet!!')\r\n            setCategories( cats => [inputValue,...cats,])\r\n            setInputValue('');\r\n        }\r\n\r\n\r\n    }\r\n    \r\n    \r\n    return (\r\n\r\n        <form onSubmit={ handleSubmit}>\r\n            <input \r\n                type=\"text\"\r\n                value={ inputValue }\r\n                onChange= { handleInputChange}\r\n            />\r\n\r\n        </form>\r\n\r\n    )\r\n}\r\n\r\n\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n}","\r\n\r\n\r\n\r\n\r\n\r\n    export const getGifs = async(category)=>{\r\n\r\n        const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=S53SGCJJN02Clu8j8XNNOqx87BaZMvqC`\r\n        const resp = await fetch ( url );\r\n        const {data} = await resp.json();\r\n\r\n        const gifs = data.map(img =>{\r\n            return{\r\n                id: img.id,\r\n                title: img.title,\r\n                url: img.images?.downsized_medium.url                \r\n            }\r\n        })\r\n\r\n        return gifs;\r\n\r\n    }\r\n\r\n\r\n","import React from 'react'\r\n\r\nexport const GifGridItem = ( {id, title, url} ) => {\r\n\r\n    // console.log(id, title, url)\r\n\r\n    return (\r\n        <div className=\"card animate__bounce animate__fadeIn\">\r\n            <img src= { url } alt={title}/>\r\n            <p> { title }</p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs'\r\n// import { getGifs } from '../helpers/getGifs'\r\nimport { GifGridItem } from './GifGridItem'\r\n\r\nexport const GifGrid = ( {category} ) => {\r\n\r\n\r\n    // const [images, setimages] = useState([])\r\n\r\n    const { data:images, loading } = useFetchGifs(category);\r\n    \r\n\r\n    \r\n    // getGifs();\r\n    \r\n    return (\r\n        <>\r\n            <h3> { category } </h3>\r\n\r\n            { loading && <p>Loading...</p> }\r\n            \r\n            <div className=\"card-grid animate__bounce animate__fadeIn\">\r\n            \r\n            \r\n                {\r\n                    images.map( (img )=>  {\r\n                        return <GifGridItem \r\n                            key = {img.id}\r\n                            {...img}\r\n                        />\r\n                    })\r\n                }\r\n            \r\n\r\n            </div>\r\n        </>\r\n            \r\n    )\r\n}\r\n","import { useEffect, useState } from 'react'\r\nimport { getGifs } from '../helpers/getGifs';\r\n\r\n\r\n\r\nexport const useFetchGifs = ( category ) =>{\r\n\r\n    const [state, setstate] = useState({\r\n        \r\n        data: [],\r\n        loading: true \r\n\r\n    });\r\n\r\n    useEffect( ()=> {\r\n\r\n        getGifs( category )\r\n        \r\n            .then( imgs =>{\r\n\r\n                setstate({\r\n                    data: imgs,\r\n                    loading: false\r\n                })\r\n\r\n            })\r\n\r\n    },[category])\r\n\r\n    return state; // { data:[], loading:true };\r\n\r\n}\r\n\r\n","import React, { useState } from 'react';\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\n\r\n\r\n\r\nconst GifExpertApp = ()=>{\r\n\r\n    // const categories = ['One Punch', 'Samurai X', 'Dragon Ball']\r\n    const [categories, setCategories] = useState(['One Punch'])\r\n    \r\n    // const handleAdd = ()=>{\r\n    //     setCategories([...categories,'HunterX']);\r\n    //     // setCategories( cats => [..cats, 'HunterX']);\r\n    // }\r\n    return(\r\n        <>\r\n            <h2>GifExpertApp</h2>\r\n            <AddCategory setCategories={ setCategories } />\r\n            <hr/>\r\n\r\n            {/* <button onClick={ handleAdd }>Agregar</button> */}\r\n\r\n            <ol>\r\n                { \r\n                    categories.map( category => (\r\n                        \r\n                        <GifGrid\r\n                            key={category}\r\n                            category = {category}\r\n                        />\r\n                    ))\r\n                }\r\n            </ol>\r\n        </>    \r\n    )\r\n}\r\n\r\n\r\nexport default GifExpertApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from './GifExpertApp';\nimport './index.css';\n\n\n\n\nconst divRoot = document.querySelector('#root');\n\nReactDOM.render( <GifExpertApp />, divRoot );\n\n\n\n"],"sourceRoot":""}